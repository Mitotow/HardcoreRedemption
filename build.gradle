plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'fr.mitoto'
version = '2.0-1.21.4'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.google.code.gson:gson:2.8.9"

    testImplementation "com.github.seeseemelk:MockBukkit-v1.20:3.80.0"
    testImplementation "org.junit.jupiter:junit-jupiter:5.11.4"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.11.4"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.11.4"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(17)
}
test {
    useJUnitPlatform()
}